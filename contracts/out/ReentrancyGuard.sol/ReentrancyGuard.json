{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"runs":200,"details":{"peephole":false,"inliner":false,"jumpdestRemover":false,"orderLiterals":false,"deduplicate":false,"cse":false,"constantOptimizer":false,"yul":true,"yulDetails":{"stackAllocation":true,"optimizerSteps":"u:fDnTOcmuO"},"simpleCounterForLoopUncheckedIncrement":true}},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":42230,"exportedSymbols":{"ReentrancyGuard":[42229]},"nodeType":"SourceUnit","src":"109:3131:40","nodes":[{"id":42162,"nodeType":"PragmaDirective","src":"109:24:40","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":42229,"nodeType":"ContractDefinition","src":"886:2353:40","nodes":[{"id":42166,"nodeType":"VariableDeclaration","src":"1674:40:40","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:40","scope":42229,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":42165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":42169,"nodeType":"VariableDeclaration","src":"1720:36:40","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:40","scope":42229,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":42168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:40","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":42171,"nodeType":"VariableDeclaration","src":"1763:23:40","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:40","scope":42229,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":42174,"nodeType":"ErrorDefinition","src":"1850:37:40","nodes":[],"documentation":{"id":42172,"nodeType":"StructuredDocumentation","src":"1793:52:40","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:40","parameters":{"id":42173,"nodeType":"ParameterList","parameters":[],"src":"1884:2:40"}},{"id":42182,"nodeType":"FunctionDefinition","src":"1893:52:40","nodes":[],"body":{"id":42181,"nodeType":"Block","src":"1907:38:40","nodes":[],"statements":[{"expression":{"id":42179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42177,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42171,"src":"1917:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42178,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42166,"src":"1927:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42180,"nodeType":"ExpressionStatement","src":"1917:21:40"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":42175,"nodeType":"ParameterList","parameters":[],"src":"1904:2:40"},"returnParameters":{"id":42176,"nodeType":"ParameterList","parameters":[],"src":"1907:0:40"},"scope":42229,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":42193,"nodeType":"ModifierDefinition","src":"2322:103:40","nodes":[],"body":{"id":42192,"nodeType":"Block","src":"2346:79:40","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":42185,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42209,"src":"2356:19:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":42186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42187,"nodeType":"ExpressionStatement","src":"2356:21:40"},{"id":42188,"nodeType":"PlaceholderStatement","src":"2387:1:40"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":42189,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42217,"src":"2398:18:40","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":42190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42191,"nodeType":"ExpressionStatement","src":"2398:20:40"}]},"documentation":{"id":42183,"nodeType":"StructuredDocumentation","src":"1951:366:40","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:40","parameters":{"id":42184,"nodeType":"ParameterList","parameters":[],"src":"2343:2:40"},"virtual":false,"visibility":"internal"},{"id":42209,"nodeType":"FunctionDefinition","src":"2431:307:40","nodes":[],"body":{"id":42208,"nodeType":"Block","src":"2470:268:40","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":42198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42196,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42171,"src":"2558:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":42197,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42169,"src":"2569:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":42203,"nodeType":"IfStatement","src":"2554:86:40","trueBody":{"id":42202,"nodeType":"Block","src":"2578:62:40","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":42199,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42174,"src":"2599:28:40","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":42200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42201,"nodeType":"RevertStatement","src":"2592:37:40"}]}},{"expression":{"id":42206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42204,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42171,"src":"2714:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42205,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42169,"src":"2724:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42207,"nodeType":"ExpressionStatement","src":"2714:17:40"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:40","parameters":{"id":42194,"nodeType":"ParameterList","parameters":[],"src":"2459:2:40"},"returnParameters":{"id":42195,"nodeType":"ParameterList","parameters":[],"src":"2470:0:40"},"scope":42229,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":42217,"nodeType":"FunctionDefinition","src":"2744:208:40","nodes":[],"body":{"id":42216,"nodeType":"Block","src":"2782:170:40","nodes":[],"statements":[{"expression":{"id":42214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42212,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42171,"src":"2924:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42213,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42166,"src":"2934:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42215,"nodeType":"ExpressionStatement","src":"2924:21:40"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:40","parameters":{"id":42210,"nodeType":"ParameterList","parameters":[],"src":"2771:2:40"},"returnParameters":{"id":42211,"nodeType":"ParameterList","parameters":[],"src":"2782:0:40"},"scope":42229,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":42228,"nodeType":"FunctionDefinition","src":"3131:106:40","nodes":[],"body":{"id":42227,"nodeType":"Block","src":"3195:42:40","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":42225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42223,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42171,"src":"3212:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":42224,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42169,"src":"3223:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":42222,"id":42226,"nodeType":"Return","src":"3205:25:40"}]},"documentation":{"id":42218,"nodeType":"StructuredDocumentation","src":"2958:168:40","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:40","parameters":{"id":42219,"nodeType":"ParameterList","parameters":[],"src":"3163:2:40"},"returnParameters":{"id":42222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42228,"src":"3189:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42220,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:40"},"scope":42229,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":42163,"nodeType":"StructuredDocumentation","src":"135:750:40","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[42229],"name":"ReentrancyGuard","nameLocation":"904:15:40","scope":42230,"usedErrors":[42174],"usedEvents":[]}],"license":"MIT"},"id":40}